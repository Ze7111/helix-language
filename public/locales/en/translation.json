{
	"hero": {
		"title.1": "Supercharged C++",
		"title.2": " Programming!",
		"subtitle": "Unleashing the Power of Helix: Combines Efficiency, Flexibility, and High-Performance for Your Development Process.",
		"globe_title": "Create Robust, High-Performance, Cross Language, Maintainable, Code with Ease and Speed",
		"main_button_text": "Get Started",
		"secondary_button_text": "Read the Docs"
	},
	"header": {
		"install": "Install",
		"docs": "Docs",
		"blog": "Blog",
		"contact": "Contact",
		"tools": "Tools",
		"about": "About",
		"primary_button_text": "Get Started",
		"secondary_button_text": "Login"
	},
	"features": {
		"learn_more": "Learn more",
		"title": "Features",
		"subtitle": "All the tools you need",
		"description": "Helix is a high-performance general-purpose language that seamlessly integrates with C++, Rust, and Python. It allows you to build robust and maintainable systems with ease and speed, without sacrificing on performance.",
		"async": "Helix supports async operations, enabling non-blocking execution of complex tasks with ease without having to manually manage threads.",
		"pattern_matching": "Pattern matching in Helix simplifies complex conditional logic, making your code more readable and maintainable.",
		"macros": "Helix macros provide powerful code generation capabilities, allowing you to write less boilerplate and more expressive code.",
		"generators": "Generators in Helix provide an easy way to create iterators with the yield keyword, making it simple to work with streams of data.",
		"error_handling": "Comprehensive error handling and error displaying can handle even the most unaccepted errors, such as seg faults - errors are only pretty printed in debug mode",
		"data_structures": "Helix supports a variety of data structures including classes, structs, enums, and more, giving you the tools to model your data effectively.",
		"imports": "Seamlessly import modules from C++, Rust, and Python, making Helix a perfect glue language for mixed-language projects.",
		"type_handling": "Robust type handling features in Helix, including type inference, type casting, and type checking, ensure your code is both safe and efficient.",
        "memory_management": "Helix provides efficient memory management features, including automatic memory allocation and garbage collection, ensuring your applications run smoothly."
    },
	"faq": {
		"title": "Frequently Asked Questions"
	},
	"newsletter": {
		"title": "Subscribe to our newsletter",
		"subtitle": "Get notified for all updates",
		"input_placeholder": "Enter your email",
		"button_text": "Subscribe",
		"privacy": "We care about the protection of your data. Read our",
		"privacy_link": "Privacy Policy."
	},
	"blog": {
		"prev": "Prev",
		"next": "Next"
	}
}
